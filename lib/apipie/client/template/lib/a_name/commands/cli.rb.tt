class <%= resource_name.camelize %> < Apipie::Client::CliCommand

<% resource[:methods].each do |method| -%>
  desc '<%= method[:name] %>', '<%= api(method)[:short_description] %>'
<%   params_in_path(method).each do |param| -%>
  method_option :<%= param %>, :required => 'true'
<%   end
     method[:params].map {|p| p[:expected_type] == "hash" ? (p[:params] || p) : p}.flatten.each do |param| -%>
  method_option :<%= param[:name] %>, :required => <%= param[:required] ? 'true' : 'false' %>, :desc => '<%= plaintext(param[:description]) %>', :type => :<%= param[:expected_type] %>
<%   end -%>
  def <%= method[:name] %>
<%   #if params_in_path(method).any? || transformation_hash(method).any?
       transform_options_params = [params_in_path(method).inspect]
       transform_options_params << transformation_hash(method).inspect if transformation_hash(method).any? -%>
    params = transform_options(<%= transform_options_params.join(", ").html_safe %>)
<%   #end -%>
    data, resp = client.<%= method[:name] %>(params)
    print_data(data)
  end

<% end -%>
end
